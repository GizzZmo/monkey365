#Plugin to get information about O365 Sharepoint Online site
Function Get-MonkeySharePointOnlineWebAll{
    [cmdletbinding()]
    Param (
        [Parameter(Mandatory= $false, HelpMessage="Background Plugin ID")]
        [String]$pluginId
    )
    Begin{
        #Set array
        $all_webs = @()
        $vars = @{
            O365Object = $O365Object;
            WriteLog = $WriteLog;
            Verbosity = $Verbosity;
            InformationAction = $InformationAction;
        }
    }
    Process{
        $msg = @{
            MessageData = ($message.MonkeyGenericTaskMessage -f $pluginId, "Sharepoint Online crawl Web", $O365Object.TenantID);
            callStack = (Get-PSCallStack | Select-Object -First 1);
            logLevel = 'info';
            InformationAction = $InformationAction;
            Tags = @('SPSWebCrawlInfo');
        }
        Write-Information @msg
        #Get all webs for user
        $allowed_sites = Get-MonkeySPSWebsForUser
        #Getting external users for each site
        $param = @{
            ScriptBlock = {Invoke-MonkeyPSCrawlWeb -Web $_};
            ImportCommands = $O365Object.LibUtils;
            ImportVariables = $vars;
            ImportModules = $O365Object.runspaces_modules;
            StartUpScripts = $O365Object.runspace_init;
            ThrowOnRunspaceOpenError = $true;
            Debug = $O365Object.VerboseOptions.Debug;
            Verbose = $O365Object.VerboseOptions.Verbose;
        }
        $allowed_sites | Invoke-MonkeyJob @param | ForEach-Object {
            if($_){
                $all_webs+=$_
            }
        }
    }
    End{
        if($all_webs){
            $all_webs.PSObject.TypeNames.Insert(0,'Monkey365.SharePoint.Crawl.Web')
            [pscustomobject]$obj = @{
                Data = $all_webs
            }
            $returnData.o365_spo_web_all = $obj
        }
        else{
            $msg = @{
                MessageData = ($message.MonkeyEmptyResponseMessage -f "Sharepoint Online crawl Web", $O365Object.TenantID);
                callStack = (Get-PSCallStack | Select-Object -First 1);
                logLevel = 'warning';
                InformationAction = $InformationAction;
                Tags = @('SPSWebCrawlingEmptyResponse');
            }
            Write-Warning @msg
        }
    }
}